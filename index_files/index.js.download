var index =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/general/attr.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attr = undefined;

var _checkType = __webpack_require__("./src/js/general/check-type.js");

var attr = exports.attr = function attr(elem, _attr, value) {

  if ((0, _checkType.checkType)(elem, "object") && (0, _checkType.checkType)(_attr, "string")) {

    if (value || typeof value === "string") {

      elem.setAttribute(_attr, value);
    } else {

      var $attr = elem.hasAttribute(_attr);

      if ($attr) {

        var $attrValue = elem.getAttribute(_attr);

        if ($attrValue) {

          return $attrValue;
        } else {

          return true;
        }
      } else {

        return false;
      }
    }
  }
}; // attr - ver. 1.0.2

/*

  Description
  - - - - - -
  Функция, которая может проверить наличие атрибута, так же взять его значение или записать новое.
  Если не передано новое значение, то тогда функция вернет просто наличие атрибута или если в нем записано какое-либо значение, то вернет его.
  
  Параметры:
    1. elem (object) (обязательный) - элемент у которого будет проверятся атрибут
    2. attr (string) (обязательный) - название атрибута, с которым будет работать функция
    3. value (string) (не обязательный) - значение атрибута, которое будет в него записано, если этот параметр передан

*/

/***/ }),

/***/ "./src/js/general/check-type.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

// checkType - ver. 1.0.1

/*
  
  Description
  - - - - - -
  Функция проверки типа переменной. В функцию передается переменная и тип на который её нужно проверить.
  В зависимости от проверки вернет true или false.

*/

var checkType = exports.checkType = function checkType($var, $type) {

  if ($type == "string" || $type == "function" || $type == "object" || $type == "boolean") {

    if ($var && (typeof $var === "undefined" ? "undefined" : _typeof($var)) === $type) {

      return true;
    } else {

      return false;
    }
  } else if ($type == "number") {

    if (typeof $var === "number" && ($var <= 0 || $var >= 0)) {

      return true;
    } else {

      return false;
    }
  } else if ($type == "array") {

    if ($var && Array.isArray($var)) {

      return true;
    } else {

      return false;
    }
  }
};

/***/ }),

/***/ "./src/js/general/debounce.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounce = undefined;

var _checkType = __webpack_require__("./src/js/general/check-type.js");

var state = null; // debounce - ver. 1.0.2

/*

  Description
  - - - - - -
  Функция отложенного выполеннея другой функции

  Параметры:
    1. func (function) (обязательный) - функция которая должны выполняться с отложенным временем
    2. time (number) (не обязательный) - время задержки в милисекундах. Дефолтное значение 300 

*/

var FROZE = 1;

var debounce = exports.debounce = function debounce(func) {
  var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;


  if ((0, _checkType.checkType)(func, "function") && (0, _checkType.checkType)(time, "number")) {

    if (state) {

      return;
    }

    func.apply(this, arguments);
    state = FROZE;

    setTimeout(function () {

      state = null;
    }, time);
  }
};

/***/ }),

/***/ "./src/js/general/find-current-parent.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findCurrentParent = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; // findCurrentParent - ver. 1.0.2

/*

  Description
  - - - - - -
  Функция нахождения родительского элемента по классу.
  Будет искать родителя до тех пор, пока не дойдет то документа, если найдет родителя, то вернет его, если нет, то вернет false

  Параметры:
    1. elem (object) (обязательный) - элемент от которого будет происходить поиск родителя
    2. parentClass (string) (обязательный) - класс родителя, по которому будет идти поиск

*/

var _checkType = __webpack_require__("./src/js/general/check-type.js");

var findCurrentParent = exports.findCurrentParent = function findCurrentParent(elem, parentClass) {

  if ((0, _checkType.checkType)(elem, "object") && (0, _checkType.checkType)(parentClass, "string")) {

    var parent = elem.parentNode;

    if (parent != document) {

      // Поиск родителя до тех пор пока не найдется элемент с нужным классом.
      while ((typeof parent === "undefined" ? "undefined" : _typeof(parent)) === "object" && !parent.classList.contains(parentClass)) {

        parent = parent.parentNode;

        if (parent == document) {

          parent = null;
          break;
        }
      }
    } else {

      parent = null;
    }

    if (parent != null) {

      return parent;
    } else {

      return false;
    }
  }
};

/***/ }),

/***/ "./src/js/general/find.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findElemsTags = exports.findFirstTag = exports.findElemsTag = exports.findElemsClasses = exports.findFirstClass = exports.findElemsClass = undefined;

var _checkType = __webpack_require__("./src/js/general/check-type.js");

// findElemsClass - ver. 1.0.3

/*

  Description
  - - - - - -
  Функция нахождения элементов на странице по классу.
  Если хоть один элемент будет найден, то вернется массив с ним, если нет, то ничего

  Принимает параметры:
    1. elemsClass (string) (обязательный) - класс элементов, по которому будет идти поиск
    2. lookPlace (object) (обязательный) - элемент, в котором будет происходить поиск

*/

var findElemsClass = exports.findElemsClass = function findElemsClass(elemsClass, lookPlace) {

  if ((0, _checkType.checkType)(elemsClass, "string") && (0, _checkType.checkType)(lookPlace, "object")) {

    var array = lookPlace.getElementsByClassName(elemsClass);

    if (array.length > 0) {

      return Array.prototype.slice.call(array);
    }
  }
};

// findFirstClass - ver. 1.0.3

/*

  Description
  - - - - - -
  Функция нахождения первого элемента на странице по классу. Реализована для замены использования id.
  Если элемент будет найден, то функция вернет его

  Принимает параметры:
    1. elemClass (string) (обязательный) - класс элемента, по которому будет идти поиск
    2. lookPlace (object) (обязательный) - элемент, в котором будет происходить поиск

*/

// global ver. 1.0.1

var findFirstClass = exports.findFirstClass = function findFirstClass(elemClass, lookPlace) {

  if ((0, _checkType.checkType)(elemClass, "string") && (0, _checkType.checkType)(lookPlace, "object")) {

    var elem = lookPlace.getElementsByClassName(elemClass)[0];

    if (elem) {

      return elem;
    }
  }
};

// findElemsClasses - ver. 1.0.3

/*

  Description
  - - - - - -
  Функция нахождения элементов сразу по нескольким классам.
  Если хоть один элемент будет найден, то функция вернет массив с отдельными массивами для каждого класса элементами

  Принимает параметры:
    1. elemsClasses (array) (обязательный) - массив, с классами элементов
    2. lookPlace (object) (обязательный) - элемент, в котором будет происходить поиск

*/

var findElemsClasses = exports.findElemsClasses = function findElemsClasses(elemsClassesArray, lookPlace) {

  if ((0, _checkType.checkType)(elemsClassesArray, "array") && (0, _checkType.checkType)(lookPlace, "object")) {

    var array = [];

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = elemsClassesArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var item = _step.value;


        if ((0, _checkType.checkType)(item, "string")) {

          var arrayClass = lookPlace.getElementsByClassName(item);

          if (arrayClass.length > 0) {

            array.push(Array.prototype.slice.call(arrayClass));
          }
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    if (array.length > 0) {

      return array;
    }
  }
};

// findElemsTag - ver. 1.0.3

/*

  Description
  - - - - - -
  Функция нахождения элементов на странице по тегу.
  Если хоть один элемент будет найден, то вернется массив с ним, если нет, то ничего

  Принимает параметры:
    1. elemsTag (string) (обязательный) - тег элементов, по которому будет идти поиск
    2. lookPlace (object) (обязательный) - элемент, в котором будет происходить поиск

*/

var findElemsTag = exports.findElemsTag = function findElemsTag(elemsTag, lookPlace) {

  if ((0, _checkType.checkType)(elemsTag, "string") && (0, _checkType.checkType)(lookPlace, "object")) {

    var array = lookPlace.getElementsByTagName(elemsTag);

    if (array.length > 0) {

      return Array.prototype.slice.call(array);
    }
  }
};

// findFirstTag - ver. 1.0.3

/*

  Description
  - - - - - -
  Функция нахождения первого элемента на странице по тегу. Реализована для замены использования id.
  Если элемент будет найден, то функция вернет его

  Принимает параметры:
    1. elemTag (string) (обязательный) - тег элемента, по которому будет идти поиск
    2. lookPlace (object) (обязательный) - элемент, в котором будет происходить поиск

*/

var findFirstTag = exports.findFirstTag = function findFirstTag(elemTag, lookPlace) {

  if ((0, _checkType.checkType)(elemTag, "string") && (0, _checkType.checkType)(lookPlace, "object")) {

    var elem = lookPlace.getElementsByTagName(elemTag)[0];

    if (elem) {

      return elem;
    }
  }
};

// findElemsTags - ver. 1.0.3

/*

  Description
  - - - - - -
  Функция нахождения элементов сразу по нескольким тегам.
  Если хоть один элемент будет найден, то функция вернет массив с отдельными массивами для каждого тега элементами

  Принимает параметры:
    1. elemsTagsArray (array) (обязательный) - массив, с тегами элементов
    2. lookPlace (object) (обязательный) - элемент, в котором будет происходить поиск

*/

var findElemsTags = exports.findElemsTags = function findElemsTags(elemsTagsArray, lookPlace) {

  if ((0, _checkType.checkType)(elemsTagsArray, "array") && (0, _checkType.checkType)(lookPlace, "object")) {

    var array = [];

    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = elemsTagsArray[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var item = _step2.value;


        if ((0, _checkType.checkType)(item, "string")) {

          var arrayTag = lookPlace.getElementsByTagName(item);

          if (arrayTag.length > 0) {

            array.push(Array.prototype.slice.call(arrayTag));
          }
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    if (array.length > 0) {

      return array;
    }
  }
};

/***/ }),

/***/ "./src/js/general/inspect-mobile.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
// inspectMobile - ver. 1.0.1

/*

  Description
  - - - - - -
  Функция, проверяющая на стороне клиента, с мобильного ли браузера пользователь зашел на сайт.
  Работает не со 100% гарантией. Желательно использовать другие методы определения браузера.
  Если мобильный браузер то вернет true, если нет, то false

*/

var inspectMobile = exports.inspectMobile = function inspectMobile() {

  var mobile = false;
  var browser = navigator.userAgent;
  var mobileBrowsers = ["Android", "iPhone", "iPad", "iPod", "BlackBerry", "Opera Mini", "IEMobile"];

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = mobileBrowsers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var item = _step.value;


      var regExp = new RegExp(item);

      if (regExp.test(browser)) {

        mobile = true;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return mobile;
};

/***/ }),

/***/ "./src/js/general/state-classes.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
var activeClass = "is-active";
var successClass = "is-success";
var errorClass = "is-error";
var onClass = "is-on";
var offClass = "is-off";
var moveClass = "is-move";
var openClass = "is-open";
var closeClass = "is-close";
var hoverClass = "is-hover";
var hideClass = "is-hide";
var lockClass = "is-lock";
var fixClass = "is-fix";
var disabledClass = "is-disabled";

var stateClasses = {
	active: activeClass,
	success: successClass,
	error: errorClass,
	on: onClass,
	off: offClass,
	move: moveClass,
	open: openClass,
	close: closeClass,
	hover: hoverClass,
	hide: hideClass,
	lock: lockClass,
	fix: fixClass,
	disabled: disabledClass
};

exports.activeClass = activeClass;
exports.successClass = successClass;
exports.errorClass = errorClass;
exports.onClass = onClass;
exports.offClass = offClass;
exports.moveClass = moveClass;
exports.openClass = openClass;
exports.closeClass = closeClass;
exports.hoverClass = hoverClass;
exports.hideClass = hideClass;
exports.lockClass = lockClass;
exports.fixClass = fixClass;
exports.disabledClass = disabledClass;
exports.stateClasses = stateClasses;

/***/ }),

/***/ "./src/js/general/window-resize.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowResize = undefined;

var _checkType = __webpack_require__("./src/js/general/check-type.js");

var _debounce = __webpack_require__("./src/js/general/debounce.js");

var _inspectMobile = __webpack_require__("./src/js/general/inspect-mobile.js");

var eventArray = []; // windowResize - ver. 1.1.3

/*

  Description
  - - - - - -
  Функция которая предназначена для того чтобы исполнять пользовательские функции после ресайза страницы.
  Это сделано специально для того, чтобы событие resize отслеживалось только в одном месте, и больше не создавалось.

  Принимает параметры:
    1. funcs (array или function) (обязательный) - массив с функциями или одна функция, которая будет выполнена после полной загрузки страницы.

*/

var windowResize = exports.windowResize = function windowResize(funcs) {

  if ((0, _checkType.checkType)(funcs, "function")) {

    eventArray.push(funcs);
  } else if ((0, _checkType.checkType)(funcs, "array")) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {

      for (var _iterator = funcs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var func = _step.value;


        if ((0, _checkType.checkType)(func, "function")) {

          eventArray.push(func);
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
};
var applyFunc = function applyFunc() {
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {

    for (var _iterator2 = eventArray[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var event = _step2.value;


      event();
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
};

var windowHeight = window.innerHeight;

window.addEventListener("resize", function () {

  var $windowHeight = window.innerHeight;

  if ((0, _inspectMobile.inspectMobile)()) {

    if (Math.abs(windowHeight - $windowHeight) > 60 || windowHeight == $windowHeight) {

      (0, _debounce.debounce)(applyFunc, 150);
      windowHeight = $windowHeight;
    }
  } else {

    (0, _debounce.debounce)(applyFunc, 150);
  }
});

/***/ }),

/***/ "./src/js/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _mainSlider = __webpack_require__("./src/js/modules/main-slider.js");

var _navMenu = __webpack_require__("./src/js/modules/nav-menu.js");

var _programsSlider = __webpack_require__("./src/js/modules/programs-slider.js");

var _previewNewsSlider = __webpack_require__("./src/js/modules/preview-news-slider.js");

var _stretchItems = __webpack_require__("./src/js/modules/stretch-items.js");

var _rewardsSlider = __webpack_require__("./src/js/modules/rewards-slider.js");

var _scrollNav = __webpack_require__("./src/js/modules/scrollNav.js");

document.addEventListener("DOMContentLoaded", function () {

    (0, _mainSlider.mainSlider)();
    (0, _programsSlider.programsSlider)();
    (0, _previewNewsSlider.previewNewsSlider)();
    // stretchItems();
    (0, _rewardsSlider.rewardsSlider)();
    (0, _scrollNav.scrollNav)();
});

/***/ }),

/***/ "./src/js/modules/main-slider.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.mainSlider = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _find = __webpack_require__("./src/js/general/find.js");

var _stateClasses = __webpack_require__("./src/js/general/state-classes.js");

var _attr = __webpack_require__("./src/js/general/attr.js");

var _checkType = __webpack_require__("./src/js/general/check-type.js");

var mainSlider = exports.mainSlider = function mainSlider() {
    var name = "js-main-slider";
    var classes = {
        block: name + "-block",
        slider: name,
        wrapper: name + "-wrapper",
        slide: name + "-slide",
        nav: name + "-nav",
        prev: "js-prev",
        next: "js-next",
        pagination: name + "-pagination",
        indicator: name + "-indicator",
        style: {
            bullet: "slider-pagination__item"
        }
    };
    var elems = {
        blocks: (0, _find.findElemsClass)(classes.block, document)
    };
    var attrs = {
        changeTime: "data-change-time",
        categoryName: "data-category-name"
    };

    if (!elems.blocks) {
        return false;
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        var _loop = function _loop() {
            var block = _step.value;


            var slider = (0, _find.findFirstClass)(classes.slider, block);
            var pagination = (0, _find.findFirstClass)(classes.pagination, block);
            var indicators = (0, _find.findElemsClass)(classes.indicator, block);
            var nav = (0, _find.findFirstClass)(classes.nav, block);

            if (!slider || !pagination || !indicators || !nav) {
                return {
                    v: false
                };
            }

            var time = (0, _attr.attr)(slider, attrs.changeTime);
            var startIndicator = function startIndicator(categoryName) {

                if (!(0, _checkType.checkType)(categoryName, "string")) {
                    return false;
                }

                var _iteratorNormalCompletion2 = true;
                var _didIteratorError2 = false;
                var _iteratorError2 = undefined;

                try {
                    for (var _iterator2 = indicators[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                        var indicator = _step2.value;


                        var parent = indicator.parentNode;

                        if ((0, _attr.attr)(indicator, attrs.categoryName) === categoryName) {
                            indicator.style.transition = "width " + (+time + 100) + "ms linear";
                            indicator.style.width = "100%";
                        } else {
                            indicator.style.transition = "";
                            indicator.style.width = "";
                        }
                    }
                } catch (err) {
                    _didIteratorError2 = true;
                    _iteratorError2 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion2 && _iterator2.return) {
                            _iterator2.return();
                        }
                    } finally {
                        if (_didIteratorError2) {
                            throw _iteratorError2;
                        }
                    }
                }

                var progress = document.getElementById('main-slider-progress');

                progress.classList.add('animated');
                setTimeout(function () {
                    progress.classList.remove('animated');
                }, 5900);
            };

            new Swiper(slider, {
                wrapperClass: classes.wrapper,
                slideClass: classes.slide,
                slideActiveClass: _stateClasses.activeClass,
                autoplay: {
                    delay: time,
                    disableOnInteraction: false
                },
                pagination: {
                    el: pagination,
                    type: 'fraction'
                },
                navigation: {
                    prevEl: (0, _find.findFirstClass)(classes.prev, nav),
                    nextEl: (0, _find.findFirstClass)(classes.next, nav)
                },
                on: {
                    init: function init() {

                        var currentSlide = this.slides[this.activeIndex];
                        var categoryName = (0, _attr.attr)(currentSlide, attrs.categoryName);

                        startIndicator(categoryName);
                    },
                    slideChange: function slideChange() {

                        var currentSlide = this.slides[this.activeIndex];
                        var categoryName = (0, _attr.attr)(currentSlide, attrs.categoryName);

                        startIndicator(categoryName);
                    }
                }
            });
        };

        for (var _iterator = elems.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _ret = _loop();

            if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
};

/***/ }),

/***/ "./src/js/modules/nav-menu.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.navMenu = undefined;

var _find = __webpack_require__("./src/js/general/find.js");

var _findCurrentParent = __webpack_require__("./src/js/general/find-current-parent.js");

var _checkType = __webpack_require__("./src/js/general/check-type.js");

var _stateClasses = __webpack_require__("./src/js/general/state-classes.js");

var navMenu = exports.navMenu = function navMenu() {

    var classes = {
        block: "js-nav-menu-block",
        menu: "js-nav-menu",
        btn: "js-nav-menu-btn"
    };
    var elems = {
        blocks: (0, _find.findElemsClass)(classes.block, document),
        menus: (0, _find.findElemsClass)(classes.menu, document),
        btns: (0, _find.findElemsClass)(classes.btn, document)
    };
    var funcs = {
        open: function open(btn) {

            var block = (0, _findCurrentParent.findCurrentParent)(btn, classes.block);
            var menu = (0, _find.findFirstClass)(classes.menu, block);

            menu.classList.add(_stateClasses.openClass);

            if ((0, _checkType.checkType)(btn, "object")) {
                btn.classList.add(_stateClasses.activeClass);
            }
        },
        close: function close() {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {

                for (var _iterator = elems.menus[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var menu = _step.value;

                    menu.classList.remove(_stateClasses.openClass);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = elems.btns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var btn = _step2.value;

                    btn.classList.remove(_stateClasses.activeClass);
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }
        }
    };

    if (!elems.blocks || !elems.menus || !elems.btns) {
        return false;
    }

    document.addEventListener("click", function (e) {

        var elem = e.target;

        if (elem.classList.contains(classes.btn)) {

            var block = (0, _findCurrentParent.findCurrentParent)(elem, classes.block);
            var menu = (0, _find.findFirstClass)(classes.menu, block);

            if (menu.classList.contains(_stateClasses.openClass)) {
                funcs.close();
            } else {
                funcs.open(elem);
            }
        } else {

            var btn = (0, _findCurrentParent.findCurrentParent)(elem, classes.btn);
            var _menu = (0, _findCurrentParent.findCurrentParent)(elem, classes.menu);

            if (btn) {

                var _block = (0, _findCurrentParent.findCurrentParent)(btn, classes.block);
                var _menu2 = (0, _find.findFirstClass)(classes.menu, _block);

                if (_menu2.classList.contains(_stateClasses.openClass)) {
                    funcs.close();
                } else {
                    funcs.open(btn);
                }
            }

            if (!_menu && !btn) {
                funcs.close();
            }
        }
    });
};

/***/ }),

/***/ "./src/js/modules/preview-news-slider.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.previewNewsSlider = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _find = __webpack_require__("./src/js/general/find.js");

var _checkType = __webpack_require__("./src/js/general/check-type.js");

var previewNewsSlider = exports.previewNewsSlider = function previewNewsSlider() {

    var name = "js-preview-news-slider";
    var classes = {
        block: name + "-block",
        slider: name,
        wrapper: name + "-wrapper",
        slide: name + "-slide",
        pagination: name + "-pagination"
    };
    var elems = {
        blocks: (0, _find.findElemsClass)(classes.block, document)
    };
    var funcs = {
        movePagination: function movePagination(percent, pagination, slider) {

            if (!(0, _checkType.checkType)(percent, "number") || !(0, _checkType.checkType)(pagination, "object") || !(0, _checkType.checkType)(slider, "object")) {
                return false;
            }

            var windowWidth = window.innerWidth;

            if (percent >= 0 && percent <= 1) {
                pagination.style.left = percent * 100 + "%";
            }

            // if (windowWidth > 1280) {
            //
            //     let oneSlidePercent = 1 / (slider.slides.length - 1);
            //
            //     if (percent >= oneSlidePercent && percent <= 1 - oneSlidePercent) {
            //         pagination.style.left = (percent * 100) + "%";
            //     }
            //
            //
            // } else {
            //
            //     if (percent >= 0 && percent <= 1) {
            //         pagination.style.left = (percent * 100) + "%";
            //     }
            //
            // }
        }
    };

    if (!elems.blocks) {
        return false;
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        var _loop = function _loop() {
            var block = _step.value;


            var slider = (0, _find.findFirstClass)(classes.slider, block);
            var pagination = (0, _find.findFirstClass)(classes.pagination, block);
            var paginationParent = pagination.parentNode;
            var btnPrev = (0, _find.findFirstClass)('js-preview-news-slider-prev', block);
            var btnNext = (0, _find.findFirstClass)('js-preview-news-slider-next', block);

            if (!slider || !pagination || !paginationParent) {
                return {
                    v: false
                };
            }

            var click = false;
            var $slider = new Swiper(slider, {
                initialSlide: 1,
                slidesPerView: 'auto',
                spaceBetween: 42,
                centeredSlides: true,
                wrapperClass: classes.wrapper,
                slideClass: classes.slide,
                on: {
                    slideChange: function slideChange() {

                        var activeIndex = this.activeIndex;
                        var slidesLength = this.slides.length - 1;
                        var windowWidth = window.innerWidth;

                        if (!click) {
                            funcs.movePagination(this.progress, pagination, this);
                        }

                        if (windowWidth > 1279) {

                            if (activeIndex === 0) {
                                this.slideTo(1);
                            } else if (activeIndex === slidesLength) {
                                this.slideTo(slidesLength - 1);
                            }
                        }
                    }
                },
                breakpoints: {
                    1279: {
                        initialSlide: 0,
                        slidesPerView: "auto",
                        spaceBetween: 42,
                        centeredSlides: false
                    },
                    1180: {
                        initialSlide: 0,
                        slidesPerView: "auto",
                        spaceBetween: 42,
                        centeredSlides: true
                    },
                    560: {
                        initialSlide: 0,
                        slidesPerView: 2,
                        spaceBetween: 20
                    },
                    520: {
                        initialSlide: 0,
                        slidesPerView: 1,
                        spaceBetween: 20
                    }
                }
            });

            btnPrev.addEventListener('click', function () {
                $slider.slidePrev();
            });

            btnNext.addEventListener('click', function () {
                $slider.slideNext();
            });

            pagination.addEventListener("mousedown", function () {
                click = true;
                pagination.style.transition = "none";
            });
            document.addEventListener("mousemove", function (e) {

                if (click) {

                    var maxWidth = paginationParent.getBoundingClientRect().width;
                    var shift = e.pageX - paginationParent.getBoundingClientRect().left - pagination.offsetWidth / 2;
                    var totalSliders = $slider.slides.length;
                    var percent = shift / maxWidth * 100;

                    if (percent >= 0 && percent <= 100) {
                        funcs.movePagination(percent / 100, pagination, $slider);
                        $slider.slideTo(parseInt(percent / (100 / totalSliders)));
                    }
                }
            });
            document.addEventListener("mouseup", function () {
                click = false;
                pagination.style.transition = "";
                funcs.movePagination($slider.progress, pagination, $slider);
            });
        };

        for (var _iterator = elems.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _ret = _loop();

            if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
};

/***/ }),

/***/ "./src/js/modules/programs-slider.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.programsSlider = undefined;

var _find = __webpack_require__("./src/js/general/find.js");

var _stateClasses = __webpack_require__("./src/js/general/state-classes.js");

var programsSlider = exports.programsSlider = function programsSlider() {

    var name = "js-programs-slider";
    var classes = {
        block: name + "-block",
        slider: name,
        wrapper: name + "-wrapper",
        slide: name + "-slide",
        nav: name + "-nav",
        pagination: name + "-pagination",
        prev: "js-prev",
        next: "js-next",
        style: {
            bullet: "slider-pagination__item"
        }
    };
    var elems = {
        blocks: (0, _find.findElemsClass)(classes.block, document)
    };

    if (!elems.blocks) {
        return false;
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = elems.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var block = _step.value;


            var slider = (0, _find.findFirstClass)(classes.slider, block);
            var nav = (0, _find.findFirstClass)(classes.nav, block);
            var pagination = (0, _find.findFirstClass)(classes.pagination, block);

            if (!slider || !nav || !pagination) {
                return false;
            }

            new Swiper(slider, {
                grabCursor: true,
                loop: true,
                wrapperClass: classes.wrapper,
                slideClass: classes.slide,
                navigation: {
                    prevEl: (0, _find.findFirstClass)(classes.prev, nav),
                    nextEl: (0, _find.findFirstClass)(classes.next, nav)
                },
                pagination: {
                    el: pagination,
                    type: 'fraction',
                    clickable: true
                }
            });
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
};

/***/ }),

/***/ "./src/js/modules/rewards-slider.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rewardsSlider = undefined;

var _find = __webpack_require__("./src/js/general/find.js");

var rewardsSlider = exports.rewardsSlider = function rewardsSlider() {

    var name = "js-rewards-slider";
    var classes = {
        block: name + "-block",
        slider: name,
        wrapper: name + "-wrapper",
        slide: name + "-slide",
        nav: name + "-nav",
        prev: "js-prev",
        next: "js-next",
        pagination: name + "-pagination"
    };
    var elems = {
        blocks: (0, _find.findElemsClass)(classes.block, document)
    };

    if (!elems.blocks) {
        return false;
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = elems.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var block = _step.value;


            var slider = (0, _find.findFirstClass)(classes.slider, block);
            var nav = (0, _find.findFirstClass)(classes.nav, block);
            var pagination = (0, _find.findFirstClass)(classes.pagination, block);

            if (!slider || !nav || !pagination) {
                return false;
            }

            new Swiper(slider, {
                slidesPerView: 3,
                slidesPerGroup: 3,
                spaceBetween: 64,
                grabCursor: true,
                loop: true,
                wrapperClass: classes.wrapper,
                slideClass: classes.slide,
                pagination: {
                    el: pagination,
                    type: 'fraction'
                },
                navigation: {
                    prevEl: (0, _find.findFirstClass)(classes.prev, nav),
                    nextEl: (0, _find.findFirstClass)(classes.next, nav)
                },
                breakpoints: {
                    860: {
                        slidesPerView: 2,
                        slidesPerGroup: 2,
                        spaceBetween: 160
                    },
                    560: {
                        slidesPerView: 1,
                        slidesPerGroup: 1,
                        spaceBetween: 20
                    },
                    359: {
                        slidesPerView: 1,
                        slidesPerGroup: 1,
                        spaceBetween: 40
                    }
                }
            });
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
};

/***/ }),

/***/ "./src/js/modules/scrollNav.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
var scrollNav = exports.scrollNav = function scrollNav() {

	var elm = document.querySelector('.js-index-nav-menu-btn');

	function animate(elem, style, unit, from, to, time, prop) {
		if (!elem) {
			return;
		}
		var start = new Date().getTime(),
		    timer = setInterval(function () {
			var step = Math.min(1, (new Date().getTime() - start) / time);
			if (prop) {
				elem[style] = from + step * (to - from) + unit;
			} else {
				elem.style[style] = from + step * (to - from) + unit;
			}
			if (step === 1) {
				clearInterval(timer);
			}
		}, 25);
		if (prop) {
			elem[style] = from + unit;
		} else {
			elem.style[style] = from + unit;
		}
	}

	if (elm !== null) {
		elm.addEventListener('click', function () {
			animate(document.scrollingElement || document.documentElement, "scrollTop", "", document.documentElement.scrollTop || document.body.scrollTop, elm.offsetTop + 125, 300, true);
		});
	}
};

/***/ }),

/***/ "./src/js/modules/stretch-items.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.stretchItems = undefined;

var _find = __webpack_require__("./src/js/general/find.js");

var _windowResize = __webpack_require__("./src/js/general/window-resize.js");

var stretchItems = exports.stretchItems = function stretchItems() {

    var classes = {
        stretch: "js-stretch",
        stretchItem: "js-stretch-item"
    };
    var elems = {
        stretch: (0, _find.findFirstClass)(classes.stretch, document),
        items: null
    };

    if (!elems.stretch) {
        return false;
    }

    elems.items = (0, _find.findElemsClass)(classes.stretchItem, elems.stretch);

    if (!elems.items) {
        return false;
    }

    var Params = {
        contentWidth: elems.stretch.offsetWidth,
        itemsWidth: {
            start: [],
            finish: []
        }
    };
    var funcs = {
        setItemsRow: function setItemsRow() {

            var rowWidth = Params.contentWidth * 0.8;
            var lastIndex = 0;

            Params.itemsWidth.start = [];
            Params.itemsWidth.finish = [];

            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = elems.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var _item3 = _step.value;


                    _item3.style.width = "";
                    Params.itemsWidth.start.push(_item3.offsetWidth);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            for (var i in Params.itemsWidth.start) {

                var item = Params.itemsWidth.start[i];
                var nextItem = Params.itemsWidth.start[+i + 1];

                rowWidth = Math.ceil((rowWidth - item) * 100) / 100;

                if (rowWidth < nextItem) {

                    var balance = Params.contentWidth - Params.contentWidth * 0.8 + rowWidth;

                    balance /= +i + 1 - lastIndex;
                    balance = Math.ceil(balance * 100) / 100;

                    for (var j = lastIndex; j <= i; j++) {

                        var _item = Params.itemsWidth.start[j];

                        Params.itemsWidth.finish.push(_item + balance);

                        if (i == j) {
                            lastIndex = j + 1;
                        }
                    }

                    rowWidth = Params.contentWidth * 0.8;
                }
            }

            for (var _i in Params.itemsWidth.finish) {

                var _item2 = elems.items[_i];
                var width = Params.itemsWidth.finish[_i];

                _item2.style.width = width + "px";
            }
        }
    };

    funcs.setItemsRow();

    window.onresize = function (event) {
        Params.contentWidth = elems.stretch.offsetWidth;
        funcs.setItemsRow();
    };

    // windowResize(function() {
    //
    //     Params.contentWidth = elems.stretch.offsetWidth;
    //     funcs.setItemsRow();
    //
    // });
};

/***/ }),

/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("./src/js/index.js");


/***/ })

/******/ });
//# sourceMappingURL=index.js.map